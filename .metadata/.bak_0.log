!SESSION 2023-04-10 21:10:45.180 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\TUTOR_INVENTOR\.metadata\.bak_1.log
Created Time: 2023-04-10 21:17:30.082

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.084
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.087
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.090
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.093
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.096
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.099
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.102
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.105
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.107
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.110
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.113
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.115
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.118
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.121
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.123
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.126
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.128
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.131
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.133
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.136
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.138
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.140
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.143
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.146
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.148
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.151
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.154
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.157
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.159
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.162
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.164
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.166
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.169
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.171
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.174
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.178
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.181
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.183
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.186
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.189
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.192
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.195
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.198
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.200
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.203
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.205
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.208
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.211
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.213
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.216
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.218
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.221
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.224
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.226
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.229
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.232
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.235
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.237
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.240
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.243
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.246
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.249
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.252
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.254
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.256
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.259
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.261
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.263
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.267
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.269
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.272
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.274
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.276
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.279
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.281
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.283
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.286
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.288
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.291
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.293
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.296
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.298
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.301
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.304
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.306
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.309
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.311
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.314
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.317
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.319
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.322
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.325
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.327
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.330
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.332
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.335
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:25)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-10 21:17:30.338
!MESSAGE BadLocationException
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.AbstractDocument.get(AbstractDocument.java:967)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.get(SynchronizableDocument.java:130)
	at org.eclipse.lsp4e.operations.completion.CompletionProposalTools.getFilterFromDocument(CompletionProposalTools.java:41)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getDocumentFilter(LSCompletionProposal.java:192)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposal.getRankCategory(LSCompletionProposal.java:229)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:35)
	at org.eclipse.lsp4e.operations.completion.LSCompletionProposalComparator.compare(LSCompletionProposalComparator.java:1)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:360)
	at java.base/java.util.TimSort.sort(TimSort.java:234)
	at java.base/java.util.Arrays.sort(Arrays.java:1233)
	at org.eclipse.lsp4e.operations.completion.LSContentAssistProcessor.computeCompletionProposals(LSContentAssistProcessor.java:135)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.ui 2 2 2023-04-10 21:18:09.805
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-10 21:26:42.988
!MESSAGE Could not get hover region due to timeout after 1000 miliseconds
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverRegion(LSPTextHover.java:155)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverRegion(CompositeTextHover.java:101)
	at org.eclipse.jface.text.TextViewerHoverManager.computeInformation(TextViewerHoverManager.java:128)
	at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java:511)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:212)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4054)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3642)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-10 21:29:53.402
!MESSAGE executing callback sts4.classpath.JTRayDNR FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-10 21:29:53.406
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-10 21:35:39.818 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-10 21:35:47.001
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-10 21:35:49.350
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-10 21:35:55.350
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-10 21:36:10.033
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-10 21:36:10.033
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-10 21:36:10.034
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-10 21:36:47.926
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.lsp4e 2 0 2023-04-10 21:37:17.175
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-10 21:37:47.216
!MESSAGE executing callback sts4.classpath.vLccpSuG FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-10 21:37:47.218
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-11 10:04:15.122 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-11 10:04:23.488
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-11 10:04:26.614
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-11 10:04:40.207
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-11 10:05:04.236
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-11 10:05:04.236
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-11 10:05:04.236
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-11 10:05:50.506
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-11 10:06:55.035
!MESSAGE executing callback sts4.classpath.PripgLrj FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-11 10:06:55.037
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jface 2 0 2023-04-11 10:08:59.447
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-11 10:08:59.447
!MESSAGE A conflict occurred for CTRL+SHIFT+C:
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand,Toggle Line Comment,
		,
		Category(org.eclipse.tm4e.languageconfiguration.category,TM4E Language Configuration,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.springframework.tooling.boot.ls.ToggleComment,Toggle Comment,
		,
		Category(org.springframework.ide.eclipse.commands,Spring Generic Text Editor,Spring Language Server Commands,true),
		WorkbenchHandlerServiceHandler("org.springframework.tooling.boot.ls.ToggleComment"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-11 12:24:34.684
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.ui 4 10001 2023-04-11 12:27:11.162
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Error in Java Model (code 969): tutor(parentreg, ModelMap, HttpSession) [in HomeCntr [in [Working copy] HomeCntr.java [in com.example.demo [in src/main/java [in TUTOR_INVENTOR_1]]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:617)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:328)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:314)
	at org.eclipse.jdt.internal.core.SourceRefElement.getSourceRange(SourceRefElement.java:233)
	at org.eclipse.jdt.internal.core.Member.getJavadocRange(Member.java:301)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContentFromSource(JavadocContentAccess2.java:645)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:521)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2023-04-11 12:27:11.167
!MESSAGE tutor(parentreg, ModelMap, HttpSession) [in HomeCntr [in [Working copy] HomeCntr.java [in com.example.demo [in src/main/java [in TUTOR_INVENTOR_1]]]]] does not exist

!ENTRY org.eclipse.lsp4e 2 0 2023-04-11 12:27:11.170
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-11 12:53:57.278
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-11 12:54:00.417
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-04-12 19:16:12.581 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-12 19:16:24.188
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-12 19:16:29.496
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-12 19:16:40.236
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-12 19:17:55.422
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-12 19:17:55.422
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-12 19:17:55.422
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-12 19:18:17.118
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-12 19:19:12.830
!MESSAGE executing callback sts4.classpath.VFukMzVO FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-12 19:19:12.832
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-13 10:16:00.398 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-13 10:16:12.122
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-13 10:16:18.095
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-13 10:16:30.794
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-13 10:17:48.042
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-13 10:17:48.042
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-13 10:17:48.042
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-13 10:18:08.737
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-13 10:19:04.147
!MESSAGE executing callback sts4.classpath.VIdwEREu FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-13 10:19:04.149
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-14 10:30:05.980 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-14 10:30:17.236
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-14 10:30:22.360
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-14 10:30:33.478
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-14 10:31:53.496
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-14 10:31:53.496
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-14 10:31:53.496
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-14 10:32:33.304
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-14 10:34:08.513
!MESSAGE executing callback sts4.classpath.suIkRTBQ FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-14 10:34:08.518
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-15 10:12:31.464 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-15 10:12:44.656
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-15 10:12:49.604
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-15 10:12:59.713
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-15 10:14:13.815
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-15 10:14:13.815
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-15 10:14:13.815
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-15 10:14:38.120
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-15 10:15:36.280
!MESSAGE executing callback sts4.classpath.kQEHTwmN FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-15 10:15:36.283
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-15 10:37:22.345
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$10(LanguageServerWrapper.java:547)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:315)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$10(LanguageServerWrapper.java:545)
	... 7 more
Caused by: java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 2 0 2023-04-15 10:37:26.457
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-15 10:37:40.008
!MESSAGE executing callback sts4.classpath.mnuycHSs FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-15 10:37:40.010
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-15 10:50:44.553
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-15 11:13:02.167
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-04-15 12:38:05.946 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-15 12:38:27.811
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-15 12:38:35.717
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-15 12:39:02.028
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-15 12:40:30.352
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-15 12:40:30.352
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-15 12:40:30.352
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-15 12:40:51.912
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-15 12:42:05.183
!MESSAGE executing callback sts4.classpath.TvUzfEwZ FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-15 12:42:05.186
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-15 16:38:50.597 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-15 16:39:02.336
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-15 16:39:07.210
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-15 16:39:17.063
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-15 16:40:27.311
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-15 16:40:27.312
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-15 16:40:27.312
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-15 16:40:53.290
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-15 16:41:43.275
!MESSAGE executing callback sts4.classpath.dpTTzQCL FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-15 16:41:43.277
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-17 18:26:45.480 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-17 18:26:57.740
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-17 18:27:03.021
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-17 18:27:13.737
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-17 18:28:42.605
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-17 18:28:42.605
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-17 18:28:42.606
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-17 18:29:02.536
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-17 18:30:23.524
!MESSAGE executing callback sts4.classpath.qpvatiFC FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-17 18:30:23.527
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-18 10:14:54.784 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-18 10:15:07.067
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-18 10:15:12.165
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-18 10:15:24.070
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-18 10:16:49.167
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-18 10:16:49.167
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-18 10:16:49.168
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-18 10:17:11.692
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-18 10:18:40.680
!MESSAGE executing callback sts4.classpath.DvRiylwS FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-18 10:18:40.690
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-18 11:04:13.331
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-04-18 19:31:02.378 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-18 19:31:19.130
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-18 19:31:27.153
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-18 19:31:40.861
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-18 19:33:00.867
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-18 19:33:00.868
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-18 19:33:00.868
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-18 19:33:26.917
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-18 19:34:23.124
!MESSAGE executing callback sts4.classpath.mgUzQFVv FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-18 19:34:23.126
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-18 19:47:20.608
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-04-19 10:01:29.843 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-19 10:01:42.388
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-19 10:01:47.377
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-19 10:01:57.630
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-19 10:03:27.809
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-19 10:03:27.809
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-19 10:03:27.809
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-19 10:04:03.824
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-19 10:05:36.678
!MESSAGE executing callback sts4.classpath.sCSysoJj FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-19 10:05:36.681
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-19 10:08:09.644
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-19 10:10:55.646
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-19 10:31:52.048
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jface 2 0 2023-04-19 10:45:09.046
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-19 10:45:09.046
!MESSAGE A conflict occurred for CTRL+SHIFT+C:
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand,Toggle Line Comment,
		,
		Category(org.eclipse.tm4e.languageconfiguration.category,TM4E Language Configuration,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.springframework.tooling.boot.ls.ToggleComment,Toggle Comment,
		,
		Category(org.springframework.ide.eclipse.commands,Spring Generic Text Editor,Spring Language Server Commands,true),
		WorkbenchHandlerServiceHandler("org.springframework.tooling.boot.ls.ToggleComment"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-19 11:19:09.061
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-19 12:34:04.837
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-04-20 10:21:17.456 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-20 10:21:26.703
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-20 10:21:31.016
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-20 10:21:36.735
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-20 10:22:43.612
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-20 10:22:43.612
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-20 10:22:43.612
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-20 10:23:08.748
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-20 10:23:21.988
!MESSAGE executing callback sts4.classpath.kNxKmARf FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-20 10:23:21.991
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jface 2 0 2023-04-20 11:28:10.528
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-20 11:28:10.528
!MESSAGE A conflict occurred for CTRL+SHIFT+C:
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand,Toggle Line Comment,
		,
		Category(org.eclipse.tm4e.languageconfiguration.category,TM4E Language Configuration,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.springframework.tooling.boot.ls.ToggleComment,Toggle Comment,
		,
		Category(org.springframework.ide.eclipse.commands,Spring Generic Text Editor,Spring Language Server Commands,true),
		WorkbenchHandlerServiceHandler("org.springframework.tooling.boot.ls.ToggleComment"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)

!ENTRY org.eclipse.ui 2 2 2023-04-20 11:55:25.595
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.wst.sse.core 4 4 2023-04-20 11:55:54.133
!MESSAGE can not get a buffer without a document reference
!STACK 0
java.lang.IllegalArgumentException: can not get a buffer without a document reference
	at org.eclipse.wst.sse.core.internal.FileBufferModelManager.getBuffer(FileBufferModelManager.java:691)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslator.getModelPath(JSPTranslator.java:3307)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslator.writeExternal(JSPTranslator.java:3415)
	at java.base/java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1465)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1436)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1181)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:350)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslatorPersister.persistTranslator(JSPTranslatorPersister.java:265)
	at org.eclipse.jst.jsp.core.internal.java.JSPTranslatorPersister.persistTranslation(JSPTranslatorPersister.java:149)
	at org.eclipse.jst.jsp.core.internal.java.search.JSPIndexManager.performAction(JSPIndexManager.java:139)
	at org.eclipse.wst.sse.core.indexing.AbstractIndexManager$ResourceEventProcessingJob$1.run(AbstractIndexManager.java:1569)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.wst.sse.core.indexing.AbstractIndexManager$ResourceEventProcessingJob.run(AbstractIndexManager.java:1567)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-20 19:33:57.082 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-20 19:34:08.462
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-20 19:34:13.872
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-20 19:34:24.281
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-20 19:35:40.394
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-20 19:35:40.394
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-20 19:35:40.394
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-20 19:36:13.270
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-20 19:37:32.283
!MESSAGE executing callback sts4.classpath.FFEfAZvI FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-20 19:37:32.285
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-20 20:03:04.469
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 4 0 2023-04-20 20:03:09.023
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaCompletionProposalComputer.asJavaProposals(LSJavaCompletionProposalComputer.java:87)
	at org.eclipse.lsp4e.jdt.LSJavaCompletionProposalComputer.computeCompletionProposals(LSJavaCompletionProposalComputer.java:55)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.computeCompletionProposals(CompletionProposalComputerDescriptor.java:348)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.computeCompletionProposals(CompletionProposalCategory.java:340)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.collectProposals(ContentAssistProcessor.java:333)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.computeCompletionProposals(ContentAssistProcessor.java:289)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:378)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:377)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.ui 2 2 2023-04-20 20:24:18.964
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.ui.ide 4 4 2023-04-20 21:09:03.702
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:668)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:241)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.ui.internal.views.helpers.EmptyWorkspaceHelper.createOption(EmptyWorkspaceHelper.java:274)
	at org.eclipse.ui.internal.views.helpers.EmptyWorkspaceHelper.createEmptyArea(EmptyWorkspaceHelper.java:206)
	at org.eclipse.ui.internal.views.helpers.EmptyWorkspaceHelper.getComposite(EmptyWorkspaceHelper.java:118)
	at org.eclipse.ui.navigator.resources.ProjectExplorer.createPartControl(ProjectExplorer.java:159)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:960)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:330)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1208)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2023-04-20 21:09:03.707
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:668)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:241)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.ui.internal.views.helpers.EmptyWorkspaceHelper.createOption(EmptyWorkspaceHelper.java:274)
	at org.eclipse.ui.internal.views.helpers.EmptyWorkspaceHelper.createEmptyArea(EmptyWorkspaceHelper.java:206)
	at org.eclipse.ui.internal.views.helpers.EmptyWorkspaceHelper.getComposite(EmptyWorkspaceHelper.java:118)
	at org.eclipse.ui.navigator.resources.ProjectExplorer.createPartControl(ProjectExplorer.java:159)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:960)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:330)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1208)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2023-04-21 10:23:09.283 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-21 10:23:20.952
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-21 10:23:26.116
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-21 10:23:36.597
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-21 10:24:53.602
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-21 10:24:53.602
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-21 10:24:53.602
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-21 10:25:16.147
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-21 10:26:29.274
!MESSAGE executing callback sts4.classpath.lmhEcEZS FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-21 10:26:29.277
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-04-21 14:42:08.049 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-21 14:42:26.347
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-21 14:42:30.821
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-21 14:42:36.360
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-21 14:44:02.356
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-21 14:44:02.356
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-21 14:44:02.357
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-21 14:44:38.621
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-21 14:45:38.351
!MESSAGE executing callback sts4.classpath.JRxOvaVT FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-21 14:45:38.353
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 2 2 2023-04-21 16:05:37.802
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-21 16:06:57.013
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-21 16:09:21.058
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-21 16:09:52.332
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-21 17:58:26.879
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jface 2 0 2023-04-21 18:05:41.922
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-21 18:05:41.923
!MESSAGE A conflict occurred for CTRL+SHIFT+C:
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand,Toggle Line Comment,
		,
		Category(org.eclipse.tm4e.languageconfiguration.category,TM4E Language Configuration,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.tm4e.languageconfiguration.toggleLineCommentCommand"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.springframework.tooling.boot.ls.ToggleComment,Toggle Comment,
		,
		Category(org.springframework.ide.eclipse.commands,Spring Generic Text Editor,Spring Language Server Commands,true),
		WorkbenchHandlerServiceHandler("org.springframework.tooling.boot.ls.ToggleComment"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
!SESSION 2023-04-22 10:13:39.958 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.5
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY ch.qos.logback.classic 1 0 2023-04-22 10:13:46.843
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY org.springframework.ide.eclipse.boot.dash.cf 4 0 2023-04-22 10:13:48.992
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.springframework.ide.eclipse.boot.dash.cf [941]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"] because it is exposed to package 'org.bouncycastle.asn1' from resources org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"] and bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"] via two dependency chains.

Chain 1:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcprov)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle: org.bouncycastle.bcprov
  org.bouncycastle.bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcprov"]

Chain 2:
  org.springframework.ide.eclipse.boot.dash.cf [osgi.identity; type="osgi.bundle"; version:Version="4.17.2.202301310704"; osgi.identity="org.springframework.ide.eclipse.boot.dash.cf"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.bouncycastle.bcpkix)(bundle-version>=1.59.0))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.72.0.v20221013-1810"; osgi.wiring.bundle="org.bouncycastle.bcpkix"
  org.bouncycastle.bcpkix [osgi.identity; type="osgi.bundle"; version:Version="1.72.0.v20221013-1810"; osgi.identity="org.bouncycastle.bcpkix"]
    import: (&(osgi.wiring.package=org.bouncycastle.asn1)(&(version>=1.72.0)(!(version>=1.73.0))))
     |
    export: osgi.wiring.package: org.bouncycastle.asn1
  bcprov [osgi.identity; type="osgi.bundle"; version:Version="1.72.0"; osgi.identity="bcprov"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY ch.qos.logback.classic 1 0 2023-04-22 10:13:53.867
!MESSAGE Logback config file: C:\TUTOR_INVENTOR\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-04-22 10:14:08.787
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-22 10:14:08.787
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-04-22 10:14:08.787
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-04-22 10:14:31.309
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\HP'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2023-04-22 10:15:19.683
!MESSAGE executing callback sts4.classpath.hWYmLczP FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2023-04-22 10:15:19.692
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-22 10:19:07.390
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.ui 2 2 2023-04-22 10:44:19.828
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-22 10:45:32.204
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-22 10:52:05.105
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-22 11:30:18.263
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-04-22 11:31:12.036
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:18.257
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+8
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:05:18.262
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:05:18.264
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:18.484
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:05:18.487
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:05:18.490
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:18.543
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:05:18.548
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:05:18.551
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:21.393
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88/////
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:05:21.397
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:05:21.400
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:22.236
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88///////////////
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:05:22.243
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:05:22.246
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:22.326
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88///////////////
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:05:22.329
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:05:22.331
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:25.522
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88///////////////////
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:05:25.527
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:05:25.529
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:27.631
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88//////////////////////////////////////////////////////////
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:05:27.636
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:05:27.642
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:05:41.498
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());
666666666666666666666666666666666666666666666666666666966666666666666666666666666666666666666666666666666666666666666666+88//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:05:41.504
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:05:41.507
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:04.335
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:04.341
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:04.344
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:10.120
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:10.125
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:10.128
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:11.759
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:06:11.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:06:11.765
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:11.863
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:11.868
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:11.871
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:14.835
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:14.839
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:14.842
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:14.876
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:06:14.885
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:06:14.889
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:15.788
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:06:15.792
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:06:15.794
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:15.870
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:15.875
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:15.877
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:17.221
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:06:17.225
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:06:17.227
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:17.475
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:17.478
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:17.481
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:33.133
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:06:33.137
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:06:33.140
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:06:33.212
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:06:33.216
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-04-22 12:06:33.218
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:08:23.835
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-04-22 12:08:23.840
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-04-22 12:08:23.842
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-04-22 12:08:23.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.demo;



import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.example.demo.model.contact_form_1;
import com.example.demo.model.parentreg;
import com.example.demo.model.sendrequest_tutor;

import com.example.demo.model.add_book;
import com.example.demo.model.admin;

import com.example.demo.service.admin_ser;
import com.example.demo.service.book_ser;
import com.example.demo.service.contact_form_ser;
import com.example.demo.service.parent_reg_ser;
import com.example.demo.service.request_send_tr;
import com.example.demo.service.tutor_reg_ser;
import com.example.demo.model.tutorreg;

@Controller
public class HomeCntr {
	@Autowired
	
	parent_reg_ser ss;
	
	@Autowired
	tutor_reg_ser st;
	
	@Autowired
	contact_form_ser cs;
	
	@Autowired
	admin_ser as;
	
	@Autowired
	book_ser bs;
	
	@Autowired
	request_send_tr rt;
	
	
	
	
	
	@GetMapping("/")
	public String StartForm() {

		return "welcome";
	}
	@GetMapping("/login_parent")
	public String parent_log() {

		return "login_parent";

	}
		
	@GetMapping("/login_tutor")
	public String tutor_log() {

		return "login_tutor";

	}
		
		
		
		@GetMapping("/admin_login")
		public String admin() {
			return "admin_login";

		}
		
		@GetMapping("/reg_tutor")
		public String tuto() {
			return "reg_tutor";

			
		}
		@GetMapping("/reg_parent")
		public String para() {
			return "reg_parent";

			
		}
		
		
		
		@PostMapping("/reg")
		public String registrationForm(@ModelAttribute("s1") parentreg s1) {

			ss.reg_info(s1);

			return "account_success";
		}
		
		/*session for register parent*/
		
		 @GetMapping("/reg")
			public String reg(@ModelAttribute("k")  parentreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				
				return "parent_admin_dash";
		 }
		
		/*end session for register*/
		
		@PostMapping("/reg_tutor1")
		public String registration_tutor(@ModelAttribute("s1") tutorreg s1) {

			st.tutor_info(s1);

			return "account_success_1";
		}
		 
		
	
		/*session for register tutor*/
		
		 @GetMapping("/reg_tutor1")
			public String reg_tut(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		/*end session for register*/
		
		//when username and password same then login for parent
		@PostMapping("/loginvalidparent")
		public String loginvalidate(@ModelAttribute("tparent") parentreg tparent,HttpSession session,Model mo) {
			try {
				parentreg parentlog = ss.login(tparent.getEmail(), tparent.getPass());
				if (parentlog != null) {
					
					 session.setAttribute("parent_id", parentlog.getId());

					session.setAttribute("parent", parentlog);
					return "redirect:/parent_admin_dash";
				}
			} catch (Exception e) {
				  mo.addAttribute("error", e.getMessage());
				  return "login_parent";
			}
			
			return "redirect:/login_parent";

		}
		 
		@GetMapping("/parent_admin_dash")
			public String parent_das(@ModelAttribute("pp")  parentreg pp, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(pp);
			model.addAttribute("parent", parent);
				if (session.getAttribute("parent")==null) {
					
					return"redirect:/login_parent";
					
				}
				

				
				return "parent_admin_dash";
				
		 }
		
		@GetMapping("/parentlogout")
		public String parentlogout(HttpSession session) {
			
			session.removeAttribute("parent");
			session.invalidate();
			return "redirect:/";
			
		}
		
		
		@PostMapping("/loginvalidtutor")
		public String logintutor(@ModelAttribute("ttutor") tutorreg ttutor,HttpSession session,Model mo) {
			try {
				
				tutorreg tutorlog=st.login_tutor(ttutor.getEmail(), ttutor.getPass());
				
				
				if(tutorlog!=null) {
					session.setAttribute("tutor", tutorlog);
					return "tutor_admin_dash";
				}
				
			} catch (Exception e) {
				 mo.addAttribute("error", e.getMessage());
				  return "login_tutor";
			}
			return "login_tutor";
			
		}
		 @GetMapping("/tutor_admin_dash")
			public String tutor(@ModelAttribute("k")  tutorreg k, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_tutor";
					
				}
				
				
				return "tutor_admin_dash";
		 }
		
		/* this mapping is admin*/
		
		@PostMapping("/admin_1")
		public String adminlogin(@ModelAttribute("s") admin s, HttpSession session) {
		  try {
		    admin ar = as.log(s.getEmail(), s.getPass());
		    if (ar != null) {
		      // Add session attribute for logged-in user
		      session.setAttribute("admins", ar);
		      return "redirect:/admin_home";
		    }
		  } catch (Exception e) {
		    // TODO: handle exception
		  }

		  return "admin_login";
		}
		
		@GetMapping("/admin_logout")
		public String adminlogou(HttpSession session) {
		  // Remove session attribute and invalidate session
		  session.removeAttribute("admins");
		  session.invalidate();
		  return "admin_login";
		}
		
	
		
		/*end admin mapping*/
		
		/*tutor edit mapping for tutor_admin page*/
		@GetMapping("/tutor_admin")
		public String tutoradmin(@ModelAttribute("er") tutorreg er, ModelMap model,HttpSession session) {
			List<tutorreg> tutor =st.allparent(er);
			model.addAttribute("tutor", tutor);
			if (session.getAttribute("admins")==null) {
				return"redirect:/admin_login";
				
			}
			return "tutor_admin";

		}
		@GetMapping("/edit_tutor")
		public String edit_tutor(@RequestParam("id") Integer id,ModelMap model) {
			tutorreg tutor=st.edit_tutor(id) ;
			model.addAttribute("tutor_ed", tutor);
			
			
			return "edit_tutor";
			
		}
		@PostMapping("/ed_tutor")
		public String editmethod(@ModelAttribute("t") tutorreg t) {
			st.savededit(t);
			
			
			return "redirect:/tutor_admin";
			
		}
		@GetMapping("/delete_tutorfirst")
		public String deleteparent(@RequestParam("id") Integer id) {
			st.delete_tutor(id);
			return"redirect:/tutor_admin" ;
			
		}
	
		
		
		/* endtutor edit mapping for tutor_admin page*/
	
		/*parent edit mapping for tutor_admin page*/
		
		@GetMapping("/parent_Admin_edit")
		public String parentadmin_edit(@ModelAttribute("ar") parentreg ar, ModelMap model,HttpSession session) {
			List<parentreg> parent = ss.allparent(ar);
			model.addAttribute("parent", parent);
			if (session.getAttribute("admins")==null) {
				
				
				return"redirect:/admin_login";
				
			}
			return "parent_Admin_edit";

		}
		@GetMapping("/edit_parent")
		public String edit_parent(@RequestParam("id") Integer id,ModelMap model) {
			parentreg parent=ss.edit_parent(id);
			model.addAttribute("parent_ed", parent);
			
			
			return "edit_parent";
			
		}
		@PostMapping("/ed_parent")
		public String editparent(@ModelAttribute("p") parentreg t) {
			ss.savededitparent(t);
			
			
			return "redirect:/parent_Admin_edit";
			
		}
		
		
		
		@GetMapping("/delete_parentfirst")
		public String deletetutor(@RequestParam("id") Integer id) {
			ss.delete_parent(id);
			return "redirect:/parent_Admin_edit" ;
			
		}
		
		/*end parent edit mapping for tutor_admin page*/
		
		@GetMapping("/tutorlogout")
		public String tutorlogout(HttpSession session) {
			session.removeAttribute("tutor");
			session.invalidate();
			
			return "redirect:/login_tutor";
			
		}
		
		
		@GetMapping("/contact_form")
		public String contact(HttpSession session) {
			
			if(session.getAttribute("parent")== null) {
				return "redirect:/login_parent";
			}
			return "contact_form";
			 
		 }
		 @PostMapping("/contact")
		 public String contactus(@ModelAttribute("s1") contact_form_1 s1) {
			cs.contact_for(s1);
			return "contact_form";
			 
		 }
		 
		 /*book add database picture*/
		 
		 @PostMapping("/book_upload")
			public String uploadfile(@RequestParam("file") MultipartFile file, @ModelAttribute("eb") add_book eb) {

				try {
					String filename = file.getOriginalFilename();
					String path = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave";
					byte[] filedata = file.getBytes();

					BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path + "/" + filename));
					bout.write(filedata);
					bout.flush();
					bout.close();

					eb.setFilename(filename);
					bs.upload_file(eb);

					System.out.println(filename);
					return "redirect:/add_book";
				} catch (Exception e) {
					e.printStackTrace();
					return "Error uploading file: " + e.getMessage();

				}

			}

			
		 
		 /*end*/
		 
		 /*display data admin page*/
		 @GetMapping("/admin_home")
			public String admindashboard(ModelMap model, HttpSession session) {
			  // Check if session attribute exists
			  if (session.getAttribute("admins") == null) {
			    // User is not logged in, redirect to login page
			    return "redirect:/admin_login";
			  }

			  long totalparent = ss.totalparent();
			  
			  long totaltutor = st.totaltutor();
			 
			  long totalebook=bs.totalebook();
			  model.addAttribute("totalparent", totalparent);
			  model.addAttribute("totaltutor", totaltutor);
			  model.addAttribute("totalebook", totalebook);
			
			  return "admin_home";
			}
		 
		 
		 /*display data for parent page*/
		 
		/* @GetMapping("/parent_admin_dash")
			public String parentadmin(@ModelAttribute("pp") parentreg pp, ModelMap model,HttpSession session) {
				
				
				// Check if session attribute exists
				  if (session.getAttribute("admins") == null) {
				    // User is not logged in, redirect to login page
				    return "redirect:/admin_login";
				  }
				
				List<parentreg> parent = ss.allparent(pp);
				model.addAttribute("parent", parent);

				return "parent_admin_dash";

			}*/
		 /*end parent page*/
		 /*display ebook list and dowonload*/
		 @GetMapping("/ebook_list")
			public String ebook_list(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebook_list";
		 }
		 
		 /*ebook list for tutuor*/
		 @GetMapping("/ebooklist_tutor")
			public String ebooklist_tutor(@ModelAttribute("tu") add_book tu, ModelMap model,HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				List<add_book> ebook_list = bs.ebooklist(tu);
				model.addAttribute("ebook_list", ebook_list);

				return "ebooklist_tutor";
		 }
		 /* end ebook list for tutuor*/
		 
		 
		 
		 @GetMapping("/downloadebook")
			public void downloadFile(@RequestParam("name") String name, HttpServletResponse response) throws IOException {
			    String filePath = "C:/TUTOR_INVENTOR/TUTOR_INVENTOR_1/Imagesave/" + name;
			    File file = new File(filePath);

			    response.setContentType("application/octet-stream");
			    String extension = FilenameUtils.getExtension(name);
			    response.setHeader("Content-Disposition", "attachment; filename=\"" + name + "." + extension);
			    response.setContentLength((int) file.length());

			    InputStream inputStream = new BufferedInputStream(new FileInputStream(file));
			    OutputStream outputStream = response.getOutputStream();
			    byte[] buffer = new byte[1024];
			    int bytesRead;
			    while ((bytesRead = inputStream.read(buffer)) != -1) {
			        outputStream.write(buffer, 0, bytesRead);
			    }
			    outputStream.flush();
			    inputStream.close();
			}
			
		
		 /* end display ebook list and dowonload*/
		 
		 /*end display*/
		 /*session apply for add_book*/
		 @GetMapping("/add_book")
			public String addebok(HttpSession session) {
				if (session.getAttribute("admins")==null) {
					return"redirect:/admin_login";
					
				}
				
				return "add_book";

			}
		 
		/*session end*/
		 /*tutor request search /tutor list teacher in parent page*/
		 @GetMapping("/list_searching_tutor")
			public String tutor_list(HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "list_searching_tutor";

			}
		
		 @PostMapping("/search_valid")
			public String search(@RequestParam(required = false) String state, @RequestParam(required = false) String city,
					 ModelMap model,HttpSession session) {
				if(session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				List<tutorreg> list_searching_tutor = st.tut_search(state, city);
				model.addAttribute("list_searching_tutor", list_searching_tutor);
				return "list_searching_tutor";
			}

		 /* end tutor request search teacher in parent page*/
		 
		 /* start send request message to the tutor code */
		 @GetMapping("/send_tutorrequest")
			public String requestsend(@RequestParam("id") Integer id,ModelMap model,tutorreg tm,HttpSession session) {
				tutorreg rt= st.sendd_request(id);
				model.addAttribute("tm", rt);
				
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				return "send_tutorrequest";
				
			}
			
		 @PostMapping("/request1")
			public String sendrequest(@RequestParam("id") int id,@ModelAttribute("reqq") sendrequest_tutor reqq,tutorreg tm,HttpSession session) {
				
				reqq.setTutor(tm);
				rt.request_1(reqq);
				if (session.getAttribute("parent")==null) {
					return"redirect:/login_parent";
					
				}
				
				return "parent_admin_dash";
				
			}
		 
		 /* End send request message to the tutor code */
		 
		 @GetMapping("/tutor_request")
			public String tutorreq(HttpSession session) {
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				return "tutor_request";
				
			}
		 
		 @PostMapping("/see")
			public String requestlist(@RequestParam Integer id,ModelMap model,HttpSession session) {
				
				if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
				
				List<sendrequest_tutor> rr= rt.getRequestDemosByTutorId(id);
				model.addAttribute("req", rr);
				
				
				return "parent_request_list";
				
				
				
			}
		 @GetMapping("/parent_request_list")
		 public String reqq(HttpSession session) {
			 if (session.getAttribute("tutor")==null) {
					return"redirect:/login_tutor";
					
				}
			return "parent_request_list";
			 
		 }
		 /*password for parent first is seen password then new password mapping page*/
		 
		 @GetMapping("/forgotpasswordparent")
		 public String forgotpasswordparent() {
			return "forgotpasswordparent";
			 
		 }
		 
		 @GetMapping("/forgotpasswordtutor")
		 public String forgotpasswordtutor() {
			return "forgotpasswordtutor";
			 
		 }
		 @PostMapping("/password_parent")
		 public String parentpass(@ModelAttribute("ps") parentreg ps,ModelMap model) {
			try {
				parentreg password_parent= ss.password_parentfind(ps.getEmail());
				if(password_parent!=null) {
					model.addAttribute("password_parent", password_parent);
					return "parentpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordparent";
			 
		 }
		 
		 
		 @PostMapping("/password_tutor")
		 public String tutorpass(@ModelAttribute("ps") tutorreg ps,ModelMap model) {
			try {
				tutorreg password_tutor= st.password_tutorfind(ps.getEmail());
				if(password_tutor!=null) {
					model.addAttribute("password_tutor", password_tutor);
					return "tutorpasswordshow";
				}
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			 
			 
			return "forgotpasswordtutor";
			 
		 }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-04-22 12:08:23.893
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3084)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
